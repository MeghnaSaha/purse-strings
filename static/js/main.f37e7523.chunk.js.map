{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","utils/DataFormatHelper.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","App.js","index.js"],"names":["AppReducer","state","action","newState","type","transactions","payload","localStorage","setItem","JSON","stringify","filter","t","id","initialState","parse","getItem","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","addTransaction","transaction","deleteTransaction","AddTransaction","useState","expenseName","setExpenseName","amount","setAmount","useContext","onSubmit","e","preventDefault","uuidv4","name","parseInt","className","htmlFor","onChange","target","placeholder","formatMoney","amt","withCurr","Math","abs","Balance","balance","reduce","sum","toFixed","Header","IncomeExpenses","expense","income","Transaction","onClick","TransactionList","length","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f37e7523.chunk.js","sourcesContent":["export const AppReducer = (state, action) => {\r\n    let newState;\r\n    switch(action.type){\r\n        case 'ADD_TRANSACTION':\r\n            newState = {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            };\r\n            localStorage.setItem('transactions', JSON.stringify(newState.transactions));\r\n            return newState;\r\n        case 'DELETE_TRANSACTION':\r\n            newState = {\r\n                ...state,\r\n                transactions: state.transactions.filter((t) => t.id !== action.payload)\r\n            }\r\n            localStorage.setItem('transactions', JSON.stringify(newState.transactions));\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {createContext, useReducer} from 'react'\r\nimport {AppReducer} from './AppReducer';\r\n\r\nconst initialState = {\r\n    transactions: JSON.parse(localStorage.getItem('transactions')) || []\r\n};\r\n\r\n// Global Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    return(\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            addTransaction,\r\n            deleteTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const AddTransaction = () => {\r\n    const [expenseName, setExpenseName] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const {addTransaction} = useContext(GlobalContext);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        addTransaction({\r\n            id: uuidv4(),\r\n            name: expenseName,\r\n            amount: parseInt(amount)\r\n        });\r\n        setExpenseName('');\r\n        setAmount(0);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h3>Add New Transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"name\">Expense Name</label>\r\n                    <input type=\"text\" value={expenseName} onChange={(e)=>setExpenseName(e.target.value)} placeholder=\"Enter expense name...\"/>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Expense Amount <br/> <div className=\"help-text\">Negative - Expense | Positive - Income</div></label>\r\n                    <input type=\"number\" value={amount} onChange={(e)=>setAmount(e.target.value)} placeholder=\"Enter expense amount...\"/>\r\n                </div>\r\n                <button className=\"btn\">Add Transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","export const formatMoney = (amt, withCurr) => {\r\n    return (amt < 0 ? '-' : '+') + (withCurr ? ' INR ' : '') + Math.abs(amt);\r\n}","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { formatMoney } from '../utils/DataFormatHelper';\r\n\r\nexport const Balance = () => {\r\n  const {transactions} = useContext(GlobalContext);\r\n\r\n  const balance = transactions.reduce((sum, t) => (sum += t.amount), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Current Balance</h4>\r\n      <h1>{formatMoney(balance, true)}</h1>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2>\r\n      Expense Tracker\r\n    </h2>\r\n  )\r\n}","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const expense = transactions.filter(t => t.amount < 0).reduce((sum, t) => (sum += t.amount), 0).toFixed(2);\r\n    const income = transactions.filter(t => t.amount >= 0).reduce((sum, t) => (sum += t.amount), 0).toFixed(2);\r\n\r\n    return(\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n            <h4>Income</h4>\r\n            <p className=\"money plus\">INR {Math.abs(income)}</p>\r\n        </div>\r\n        <div>\r\n            <h4>Expense</h4>\r\n            <p className=\"money minus\">INR {Math.abs(expense)}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { formatMoney } from \"../utils/DataFormatHelper\";\r\n\r\nexport const Transaction = ({transaction}) => {\r\n  const {deleteTransaction} = useContext(GlobalContext);\r\n\r\n  return (\r\n      <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n        {transaction.name} <span>{formatMoney(transaction.amount, false)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n      </li>\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    return(\r\n        <>\r\n            {transactions && transactions.length>0 ? <h3>History</h3> : null}\r\n            <ul className=\"list\">\r\n            {transactions.map((t) => <Transaction key={t.id} transaction={t} /> )}\r\n            </ul>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport { AddTransaction } from './components/AddTransaction';\nimport { Balance } from './components/Balance';\nimport { Header } from './components/Header';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n    <Header/>\n    <div className=\"container\">\n      <Balance/>\n      <IncomeExpenses/>\n      <TransactionList/>\n      <AddTransaction/>\n    </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}